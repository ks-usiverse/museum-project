name: Build, Push

on:
  push:
    branches: [ main ]
jobs:
  build_and_push:
    name: Push docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          logout: true
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract metadata (labels, tags, etc.) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ksoochoi/fastapi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ksoochoi/fastapi:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy_infrastructure:
    name: Deploy Azure Infrastructure with Terraform
    runs-on: ubuntu-latest
    needs: build_and_push  # Docker 이미지가 푸시된 후 실행
    steps:
      # 1. GitHub 저장소 체크아웃
      - name: Checkout the repository
        uses: actions/checkout@v2

      # 2. Terraform 설치
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # 3. Azure 로그인 (GitHub Secrets에 저장된 자격 증명 사용)
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 4. Terraform 초기화
      - name: Terraform Init
        run: terraform init
      

      - name: Import resources if they exist
        run: |
          # Check if Resource Group exists and import
          RESOURCE_GROUP_EXISTS=$(az group exists --name example-resources)
          if [ "$RESOURCE_GROUP_EXISTS" = "true" ]; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_resource_group.example /subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources
          fi
      
          # Virtual Network import
          VNET_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/virtualNetworks/example-vnet"
          if az network vnet show --ids $VNET_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_virtual_network.example $VNET_ID
          fi
      
          # Subnet import
          SUBNET_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/virtualNetworks/example-vnet/subnets/example-subnet"
          if az network vnet subnet show --ids $SUBNET_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_subnet.example $SUBNET_ID
          fi
      
          # Public IP import
          PIP_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/publicIPAddresses/example-pip"
          if az network public-ip show --ids $PIP_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_public_ip.example $PIP_ID
          fi
      
          # Network Security Group import
          NSG_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/networkSecurityGroups/example-nsg"
          if az network nsg show --ids $NSG_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_network_security_group.example $NSG_ID
          fi
      
          # Network Interface import
          NIC_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/networkInterfaces/example-nic"
          if az network nic show --ids $NIC_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_network_interface.example $NIC_ID
          fi
      
          # Network Interface Security Group Association import
          NSG_ASSOC_ID=$(terraform show -json | jq -r '.values.root_module.resources[] | select(.type == "azurerm_network_interface_security_group_association").instances[0].attributes.id')
          if [ -n "$NSG_ASSOC_ID" ]; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_network_interface_security_group_association.example $NSG_ASSOC_ID
          fi
      
          # Virtual Machine import
          VM_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Compute/virtualMachines/example-vm"
          if az vm show --ids $VM_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_virtual_machine.example $VM_ID
          fi
              run: |
          RESOURCE_GROUP_EXISTS=$(az group exists --name example-resources)
          if [ "$RESOURCE_GROUP_EXISTS" = "true" ]; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_resource_group.example /subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources
          fi
      
          # Virtual Network import
          VNET_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/virtualNetworks/example-vnet"
          if az network vnet show --ids $VNET_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_virtual_network.example $VNET_ID
          fi
      
          # Public IP import
          PIP_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/publicIPAddresses/example-pip"
          if az network public-ip show --ids $PIP_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_public_ip.example $PIP_ID
          fi
      
          # Network Security Group import
          NSG_ID="/subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources/providers/Microsoft.Network/networkSecurityGroups/example-nsg"
          if az network nsg show --ids $NSG_ID > /dev/null 2>&1; then
            terraform import \
              -var "admin_username=${{ secrets.TF_VAR_ADMIN_USERNAME }}" \
              -var "admin_password=${{ secrets.TF_VAR_ADMIN_PASSWORD }}" \
              azurerm_network_security_group.example $NSG_ID
          fi
      

      # 5. Terraform 적용 (Apply)
      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_admin_username: ${{ secrets.TF_VAR_ADMIN_USERNAME }}
          TF_VAR_admin_password: ${{ secrets.TF_VAR_ADMIN_PASSWORD }}
      
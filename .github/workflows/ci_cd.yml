name: Build, Push

on:
  push:
    branches: [ main ]
jobs:
  # build_and_push:
  #   name: Push docker image to Docker Hub
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout the repository
  #       uses: actions/checkout@v4

  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         logout: true
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}

  #     - name: Extract metadata (labels, tags, etc.) for Docker
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: ksoochoi/fastapiwithnginx

  #     - name: Build and push Docker image
  #       uses: docker/build-push-action@v5
  #       with:
  #         context: .
  #         file: ./Dockerfile
  #         push: true
  #         tags: ksoochoi/fastapiwithnginx:latest
  #         labels: ${{ steps.meta.outputs.labels }}

  deploy_infrastructure:
    name: Deploy Azure Infrastructure with Terraform
    runs-on: ubuntu-latest
    # needs: build_and_push  # Docker 이미지가 푸시된 후 실행
    steps:
      # 1. GitHub 저장소 체크아웃
      - name: Checkout the repository
        uses: actions/checkout@v2

      # 2. Terraform 설치
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # 3. Azure 로그인 (GitHub Secrets에 저장된 자격 증명 사용)
      - name: 'Azure Login'
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # 4. Terraform 초기화
      - name: Terraform Init
        run: terraform init
      
      # 5. 리소스 상태 확인 및 import 자동화
      - name: Check if Resource Group exists in Terraform state
        id: check_state
        run: |
          terraform state list azurerm_resource_group.example-resources || echo "not found"

      # 6. Import Resource Group if it does not exist
      - name: Import Resource Group if missing
        if: steps.check_state.outputs.result == 'not found'
        run: |
          terraform import azurerm_resource_group.example-resources /subscriptions/9c9e23e3-df71-42db-9f2b-609c0c9efdac/resourceGroups/example-resources

      # 7. Terraform 적용 (Apply)
      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_admin_username: ${{ secrets.TF_VAR_ADMIN_USERNAME }}
          TF_VAR_admin_password: ${{ secrets.TF_VAR_ADMIN_PASSWORD }}